!function(){"use strict";class e{constructor(e,t,n){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){const e=this._cardElement.querySelector(".card__like-button"),t=this._cardElement.querySelector(".card__delete-button"),n=this._cardElement.querySelector(".card__image");e.addEventListener("click",(()=>{this._handleLikeIcon()})),t.addEventListener("click",(()=>{this._handleDeleteCard()})),n.addEventListener("click",(()=>{this._handleImageClick({link:this._link,name:this._name})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove()}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass),console.log(e.validationMessage)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputs.some((e=>!e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._toggleButtonState(),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputs.forEach((e=>this._hideInputError(e))),this.disableButton()}}class n{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class s extends n{constructor(e,t){super(e),this._handleFormSubmit=t,this._formElement=this._popupElement.querySelector(".modal__form"),this._inputList=Array.from(this._formElement.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}resetForm(){this._formElement.reset()}}const o={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=new class extends n{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image"),this._captionElement=this._popupElement.querySelector(".modal__caption")}open(e){let{name:t,link:n}=e;this._imageElement.src=n,this._imageElement.alt=t,this._captionElement.textContent=t,super.open()}}("#image-modal");i.setEventListeners();const r=document.querySelector("#profile-edit-button"),a=document.querySelector(".profile__add-button"),l=document.querySelector("#profile-name-input"),c=document.querySelector("#profile-description-input"),u=new t(o,document.querySelector("#profile-edit-form")),m=new t(o,document.querySelector("#add-card-form"));u.enableValidation(),m.enableValidation(),m.disableButton();const d=new class{constructor(e){let{nameSelector:t,jobSelector:n}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(n)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:n}=e;this._nameElement.textContent=t,this._jobElement.textContent=n}}({nameSelector:".profile__title",jobSelector:".profile__description"});function _(t){return new e(t,"#card-template",v).getView()}const h=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);h.addItem(t)}},".cards__list");h.renderItems();const p=new s("#profile-edit-modal",(e=>{d.setUserInfo({name:e.title,job:e.description}),p.close()}));p.setEventListeners();const E=new s("#profile-card-modal",(e=>{const t=_({name:e.title,link:e.url});h.addItem(t),E.close(),E.resetForm(),m.disableButton()}));function v(e){i.open(e)}E.setEventListeners(),r.addEventListener("click",(()=>{const e=d.getUserInfo();l.value=e.name,c.value=e.job,p.open(),u.resetValidation()})),a.addEventListener("click",(()=>{E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,